// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	User interface {
		//  登录
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		//  获取用户信息
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
		//  添加收获地址
		AddUserReceiveAddress(ctx context.Context, in *UserReceiveAddressAddReq, opts ...grpc.CallOption) (*UserReceiveAddressAddRes, error)
		//  编辑收获地址
		EditUserReceiveAddress(ctx context.Context, in *UserReceiveAddressEditReq, opts ...grpc.CallOption) (*UserReceiveAddressEditRes, error)
		//  删除收获地址
		DelUserReceiveAddress(ctx context.Context, in *UserReceiveAddressDelReq, opts ...grpc.CallOption) (*UserReceiveAddressDelRes, error)
		//  获取收获地址列表
		GetUserReceiveAddressList(ctx context.Context, in *UserReceiveAddressListReq, opts ...grpc.CallOption) (*UserReceiveAddressListRes, error)
		//  添加收藏
		AddCollection(ctx context.Context, in *CollectionAddReq, opts ...grpc.CallOption) (*CollectionAddRes, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

//  登录
func (m *defaultUser) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

//  获取用户信息
func (m *defaultUser) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := NewUserClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}

//  添加收获地址
func (m *defaultUser) AddUserReceiveAddress(ctx context.Context, in *UserReceiveAddressAddReq, opts ...grpc.CallOption) (*UserReceiveAddressAddRes, error) {
	client := NewUserClient(m.cli.Conn())
	return client.AddUserReceiveAddress(ctx, in, opts...)
}

//  编辑收获地址
func (m *defaultUser) EditUserReceiveAddress(ctx context.Context, in *UserReceiveAddressEditReq, opts ...grpc.CallOption) (*UserReceiveAddressEditRes, error) {
	client := NewUserClient(m.cli.Conn())
	return client.EditUserReceiveAddress(ctx, in, opts...)
}

//  删除收获地址
func (m *defaultUser) DelUserReceiveAddress(ctx context.Context, in *UserReceiveAddressDelReq, opts ...grpc.CallOption) (*UserReceiveAddressDelRes, error) {
	client := NewUserClient(m.cli.Conn())
	return client.DelUserReceiveAddress(ctx, in, opts...)
}

//  获取收获地址列表
func (m *defaultUser) GetUserReceiveAddressList(ctx context.Context, in *UserReceiveAddressListReq, opts ...grpc.CallOption) (*UserReceiveAddressListRes, error) {
	client := NewUserClient(m.cli.Conn())
	return client.GetUserReceiveAddressList(ctx, in, opts...)
}

//  添加收藏
func (m *defaultUser) AddCollection(ctx context.Context, in *CollectionAddReq, opts ...grpc.CallOption) (*CollectionAddRes, error) {
	client := NewUserClient(m.cli.Conn())
	return client.AddCollection(ctx, in, opts...)
}
